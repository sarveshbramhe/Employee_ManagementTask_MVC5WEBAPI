@model IEnumerable<Employee_ManagementMVC.Models.Employee>

<div class="container mt-4">
    <h2 class="text-center mb-4">Employee Management</h2>

    <div class="d-flex justify-content-between mb-3">
        <p class="mb-0">
            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
        </p>
  
        <form class="form-inline">
            <input type="text" class="form-control mr-2" placeholder="Search by Name or Age..." id="searchInput">
            <button type="button" class="btn btn-secondary" onclick="filterTable()">Search</button>
        </form>

    </div>

    <table class="table table-hover table-striped">
        <thead class="thead-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Firstname)</th>
                <th>@Html.DisplayNameFor(model => model.Lastname)</th>
                <th>@Html.DisplayNameFor(model => model.Gender)</th>
                <th>@Html.DisplayNameFor(model => model.DOB)</th>
                <th>@Html.DisplayNameFor(model => model.Age)</th>
                <th>@Html.DisplayNameFor(model => model.Address)</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="employeeTable">
            @if (Model != null && Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Firstname)</td>
                        <td>@Html.DisplayFor(modelItem => item.Lastname)</td>
                        <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                        <td>@Html.DisplayFor(modelItem => item.DOB)</td>
                        <td>@Html.DisplayFor(modelItem => item.Age)</td>
                        <td>@Html.DisplayFor(modelItem => item.Address)</td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-warning mx-1" })
                            @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-sm btn-info mx-1" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-sm btn-danger mx-1" })
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">No employees found.</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="mt-3">
        @Html.ActionLink("Back to Home", "Home", "Index", new { @class = "btn btn-secondary" })
    </div>
</div>

<script>
    // JavaScript function to filter the employee list
    function filterTable() {
        var searchTerm = document.getElementById("searchInput").value.toLowerCase(); // Get the search term
        $.ajax({
            url: '@Url.Action("Index", "Employee")', // URL to send the request to
            data: { query: searchTerm }, // Sending the search term
            type: 'GET',
            success: function (data) {
                // Update the employee list with the filtered data returned from the controller
                $('#employeeList').html(data);
            }
        });
    }
        </script>

<div id="employeeList">
    @Html.Partial("_EmployeeList", Model)
</div>





